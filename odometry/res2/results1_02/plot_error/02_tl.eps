%!PS-Adobe-2.0 EPSF-2.0
%%Title: 02_tl.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Thu Jul 21 15:35:59 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (02_tl.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (Raman)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul 21 15:35:59 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
686 1094 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1094 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 1485 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1485 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 1877 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1877 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 2268 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2268 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 2660 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2660 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 3051 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3051 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 3442 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3442 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 3834 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3834 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 4225 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4225 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.6)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 1094 M
0 63 V
0 3068 R
0 -63 V
stroke
686 954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1730 1094 M
0 63 V
0 3068 R
0 -63 V
stroke
1730 954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2773 1094 M
0 63 V
0 3068 R
0 -63 V
stroke
2773 954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3817 1094 M
0 63 V
0 3068 R
0 -63 V
stroke
3817 954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4860 1094 M
0 63 V
0 3068 R
0 -63 V
stroke
4860 954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5904 1094 M
0 63 V
0 3068 R
0 -63 V
stroke
5904 954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 1094 M
0 63 V
0 3068 R
0 -63 V
stroke
6947 954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4225 N
0 -3131 V
6261 0 V
0 3131 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Translation Error [%])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3816 744 M
[ [(Helvetica) 140.0 0.0 true true 0 (Path Length [m])]
] -46.7 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C LCb setrgbcolor
6296 4092 M
[ [(Helvetica) 140.0 0.0 true true 0 (Translation Error)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C 6380 4092 M
399 0 V
707 3973 M
21 -444 V
21 -250 V
20 -167 V
21 -90 V
21 -27 V
21 4 V
21 29 V
21 51 V
21 50 V
21 46 V
20 43 V
21 27 V
21 27 V
21 27 V
21 22 V
21 20 V
21 16 V
21 16 V
20 17 V
21 18 V
21 12 V
21 8 V
21 13 V
21 12 V
21 17 V
20 22 V
21 23 V
21 25 V
21 26 V
21 27 V
21 21 V
21 27 V
21 31 V
20 24 V
21 23 V
21 13 V
21 27 V
21 26 V
21 28 V
21 34 V
21 23 V
20 22 V
21 12 V
21 13 V
21 5 V
21 7 V
21 1 V
21 4 V
21 1 V
20 -1 V
21 -6 V
21 -8 V
21 -6 V
21 -6 V
21 -6 V
21 -6 V
20 -7 V
21 -8 V
21 -10 V
21 -11 V
21 -12 V
21 -12 V
21 -11 V
21 -14 V
20 -10 V
21 -7 V
21 -6 V
21 -6 V
21 -6 V
21 -7 V
21 -9 V
21 -7 V
20 -13 V
21 -11 V
21 -7 V
21 -19 V
21 -19 V
21 -23 V
21 -25 V
20 -31 V
21 -29 V
21 -33 V
21 -31 V
21 -32 V
21 -38 V
21 -34 V
21 -35 V
20 -37 V
21 -34 V
21 -38 V
21 -33 V
21 -37 V
21 -30 V
21 -28 V
21 -33 V
20 -27 V
21 -26 V
21 -31 V
21 -26 V
21 -26 V
21 -30 V
21 -22 V
stroke 2836 2915 M
20 -23 V
21 -24 V
21 -20 V
21 -16 V
21 -17 V
21 -9 V
21 -5 V
21 -2 V
20 3 V
21 5 V
21 -1 V
21 1 V
21 5 V
21 -1 V
21 -2 V
21 2 V
20 -1 V
21 0 V
21 2 V
21 3 V
21 2 V
21 0 V
21 -1 V
20 -5 V
21 -2 V
21 -6 V
21 -3 V
21 -8 V
21 -6 V
21 -10 V
21 -6 V
20 -10 V
21 -6 V
21 -9 V
21 -7 V
21 -9 V
21 -4 V
21 -3 V
21 -7 V
20 -1 V
21 -4 V
21 0 V
21 -2 V
21 2 V
21 2 V
21 7 V
21 6 V
20 2 V
21 -2 V
21 4 V
21 -2 V
21 3 V
21 -3 V
21 2 V
20 -4 V
21 0 V
21 1 V
21 1 V
21 14 V
21 -6 V
21 -8 V
21 -6 V
20 -6 V
21 -5 V
21 -8 V
21 -9 V
21 -10 V
21 -10 V
21 -13 V
21 -11 V
20 -16 V
21 -13 V
21 -11 V
21 -15 V
21 -11 V
21 -14 V
21 -14 V
20 -15 V
21 -12 V
21 -12 V
21 -7 V
21 -5 V
21 -2 V
21 -3 V
21 -5 V
20 -4 V
21 -3 V
21 0 V
21 1 V
21 5 V
21 6 V
21 6 V
21 3 V
20 1 V
21 6 V
21 8 V
21 10 V
21 6 V
21 4 V
21 7 V
20 0 V
21 -1 V
21 4 V
21 -1 V
stroke 5006 2552 M
21 4 V
21 -3 V
21 -8 V
21 1 V
20 -17 V
21 -6 V
21 -18 V
21 -5 V
21 -18 V
21 -6 V
21 -26 V
21 -18 V
20 -6 V
21 -20 V
21 -24 V
21 -20 V
21 -25 V
21 -9 V
21 -4 V
20 -9 V
21 5 V
21 -2 V
21 -8 V
21 -2 V
21 -30 V
21 -11 V
21 -41 V
20 -38 V
21 -8 V
21 -63 V
21 -57 V
21 -3 V
21 -24 V
21 -2 V
21 -45 V
20 -10 V
21 -48 V
21 -62 V
21 -19 V
21 -45 V
21 -29 V
21 -27 V
21 17 V
20 20 V
707 3973 Box
728 3529 Box
749 3279 Box
769 3112 Box
790 3022 Box
811 2995 Box
832 2999 Box
853 3028 Box
874 3079 Box
895 3129 Box
916 3175 Box
936 3218 Box
957 3245 Box
978 3272 Box
999 3299 Box
1020 3321 Box
1041 3341 Box
1062 3357 Box
1083 3373 Box
1103 3390 Box
1124 3408 Box
1145 3420 Box
1166 3428 Box
1187 3441 Box
1208 3453 Box
1229 3470 Box
1249 3492 Box
1270 3515 Box
1291 3540 Box
1312 3566 Box
1333 3593 Box
1354 3614 Box
1375 3641 Box
1396 3672 Box
1416 3696 Box
1437 3719 Box
1458 3732 Box
1479 3759 Box
1500 3785 Box
1521 3813 Box
1542 3847 Box
1563 3870 Box
1583 3892 Box
1604 3904 Box
1625 3917 Box
1646 3922 Box
1667 3929 Box
1688 3930 Box
1709 3934 Box
1730 3935 Box
1750 3934 Box
1771 3928 Box
1792 3920 Box
1813 3914 Box
1834 3908 Box
1855 3902 Box
1876 3896 Box
1896 3889 Box
1917 3881 Box
1938 3871 Box
1959 3860 Box
1980 3848 Box
2001 3836 Box
2022 3825 Box
2043 3811 Box
2063 3801 Box
2084 3794 Box
2105 3788 Box
2126 3782 Box
2147 3776 Box
2168 3769 Box
2189 3760 Box
2210 3753 Box
2230 3740 Box
2251 3729 Box
2272 3722 Box
2293 3703 Box
2314 3684 Box
2335 3661 Box
2356 3636 Box
2376 3605 Box
2397 3576 Box
2418 3543 Box
2439 3512 Box
2460 3480 Box
2481 3442 Box
2502 3408 Box
2523 3373 Box
2543 3336 Box
2564 3302 Box
2585 3264 Box
2606 3231 Box
2627 3194 Box
2648 3164 Box
2669 3136 Box
2690 3103 Box
2710 3076 Box
2731 3050 Box
2752 3019 Box
2773 2993 Box
2794 2967 Box
2815 2937 Box
2836 2915 Box
2856 2892 Box
2877 2868 Box
2898 2848 Box
2919 2832 Box
2940 2815 Box
2961 2806 Box
2982 2801 Box
3003 2799 Box
3023 2802 Box
3044 2807 Box
3065 2806 Box
3086 2807 Box
3107 2812 Box
3128 2811 Box
3149 2809 Box
3170 2811 Box
3190 2810 Box
3211 2810 Box
3232 2812 Box
3253 2815 Box
3274 2817 Box
3295 2817 Box
3316 2816 Box
3336 2811 Box
3357 2809 Box
3378 2803 Box
3399 2800 Box
3420 2792 Box
3441 2786 Box
3462 2776 Box
3483 2770 Box
3503 2760 Box
3524 2754 Box
3545 2745 Box
3566 2738 Box
3587 2729 Box
3608 2725 Box
3629 2722 Box
3650 2715 Box
3670 2714 Box
3691 2710 Box
3712 2710 Box
3733 2708 Box
3754 2710 Box
3775 2712 Box
3796 2719 Box
3817 2725 Box
3837 2727 Box
3858 2725 Box
3879 2729 Box
3900 2727 Box
3921 2730 Box
3942 2727 Box
3963 2729 Box
3983 2725 Box
4004 2725 Box
4025 2726 Box
4046 2727 Box
4067 2741 Box
4088 2735 Box
4109 2727 Box
4130 2721 Box
4150 2715 Box
4171 2710 Box
4192 2702 Box
4213 2693 Box
4234 2683 Box
4255 2673 Box
4276 2660 Box
4297 2649 Box
4317 2633 Box
4338 2620 Box
4359 2609 Box
4380 2594 Box
4401 2583 Box
4422 2569 Box
4443 2555 Box
4463 2540 Box
4484 2528 Box
4505 2516 Box
4526 2509 Box
4547 2504 Box
4568 2502 Box
4589 2499 Box
4610 2494 Box
4630 2490 Box
4651 2487 Box
4672 2487 Box
4693 2488 Box
4714 2493 Box
4735 2499 Box
4756 2505 Box
4777 2508 Box
4797 2509 Box
4818 2515 Box
4839 2523 Box
4860 2533 Box
4881 2539 Box
4902 2543 Box
4923 2550 Box
4943 2550 Box
4964 2549 Box
4985 2553 Box
5006 2552 Box
5027 2556 Box
5048 2553 Box
5069 2545 Box
5090 2546 Box
5110 2529 Box
5131 2523 Box
5152 2505 Box
5173 2500 Box
5194 2482 Box
5215 2476 Box
5236 2450 Box
5257 2432 Box
5277 2426 Box
5298 2406 Box
5319 2382 Box
5340 2362 Box
5361 2337 Box
5382 2328 Box
5403 2324 Box
5423 2315 Box
5444 2320 Box
5465 2318 Box
5486 2310 Box
5507 2308 Box
5528 2278 Box
5549 2267 Box
5570 2226 Box
5590 2188 Box
5611 2180 Box
5632 2117 Box
5653 2060 Box
5674 2057 Box
5695 2033 Box
5716 2031 Box
5737 1986 Box
5757 1976 Box
5778 1928 Box
5799 1866 Box
5820 1847 Box
5841 1802 Box
5862 1773 Box
5883 1746 Box
5904 1763 Box
5924 1783 Box
6579 4092 Box
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4225 N
0 -3131 V
6261 0 V
0 3131 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
