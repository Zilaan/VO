%!PS-Adobe-2.0 EPSF-2.0
%%Title: 02_rl.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Fri Jul 22 11:13:05 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (02_rl.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (Raman)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 22 11:13:05 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
854 1136 M
63 0 V
6030 0 R
-63 0 V
stroke
770 1136 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
854 1644 M
63 0 V
6030 0 R
-63 0 V
stroke
770 1644 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.005)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
854 2152 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2152 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
854 2660 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2660 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.015)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
854 3167 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3167 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.02)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
854 3675 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3675 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.025)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
854 4183 M
63 0 V
6030 0 R
-63 0 V
stroke
770 4183 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.03)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
854 1136 M
0 63 V
0 2984 R
0 -63 V
stroke
854 996 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1870 1136 M
0 63 V
0 2984 R
0 -63 V
stroke
1870 996 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2885 1136 M
0 63 V
0 2984 R
0 -63 V
stroke
2885 996 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3901 1136 M
0 63 V
0 2984 R
0 -63 V
stroke
3901 996 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4916 1136 M
0 63 V
0 2984 R
0 -63 V
stroke
4916 996 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5932 1136 M
0 63 V
0 2984 R
0 -63 V
stroke
5932 996 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 1136 M
0 63 V
0 2984 R
0 -63 V
stroke
6947 996 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
854 4183 N
0 -3047 V
6093 0 V
0 3047 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Rotation Error [deg/m])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3900 786 M
[ [(Helvetica) 140.0 0.0 true true 0 (Path Length [m])]
] -46.7 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C LCb setrgbcolor
6296 4050 M
[ [(Helvetica) 140.0 0.0 true true 0 (Rotation Error)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C 6380 4050 M
399 0 V
874 3697 M
21 -745 V
20 -320 V
20 -239 V
21 -128 V
20 -105 V
20 -64 V
20 -64 V
21 -40 V
20 -41 V
20 -41 V
21 -29 V
20 -29 V
20 -29 V
21 -18 V
20 -23 V
20 -17 V
21 -12 V
20 -18 V
20 -11 V
21 -12 V
20 -11 V
20 -12 V
20 -12 V
21 -11 V
20 -6 V
20 -6 V
21 -6 V
20 -6 V
20 0 V
21 -5 V
20 -6 V
20 0 V
21 -6 V
20 -6 V
20 -6 V
20 -6 V
21 -5 V
20 -6 V
20 -6 V
21 -6 V
20 -6 V
20 -6 V
21 -5 V
20 -6 V
20 -6 V
21 -6 V
20 -6 V
20 -5 V
21 -6 V
20 -6 V
20 -6 V
20 -6 V
21 -6 V
20 -5 V
20 0 V
21 -6 V
20 0 V
20 -6 V
21 0 V
20 -6 V
20 -6 V
21 0 V
20 -5 V
20 0 V
20 -6 V
21 0 V
20 0 V
20 -6 V
21 0 V
20 -6 V
20 0 V
21 0 V
20 -6 V
20 0 V
21 -6 V
20 0 V
20 -5 V
20 0 V
21 0 V
20 -6 V
20 0 V
21 0 V
20 -6 V
20 0 V
21 0 V
20 -6 V
20 0 V
21 0 V
20 -6 V
20 0 V
21 0 V
20 -5 V
20 0 V
20 0 V
21 -6 V
20 0 V
20 0 V
21 -6 V
20 0 V
20 0 V
21 -6 V
20 0 V
stroke 2946 1392 M
20 -6 V
21 0 V
20 -6 V
20 0 V
20 0 V
21 -5 V
20 0 V
20 -6 V
21 0 V
20 0 V
20 -6 V
21 0 V
20 0 V
20 0 V
21 -6 V
20 0 V
20 0 V
21 0 V
20 -6 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 -5 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 5 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 6 V
20 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 6 V
21 0 V
20 0 V
20 0 V
21 0 V
20 -6 V
20 0 V
20 0 V
21 0 V
20 0 V
20 -6 V
21 0 V
20 0 V
20 0 V
21 0 V
20 -5 V
20 0 V
21 0 V
20 0 V
20 0 V
20 0 V
21 0 V
20 -6 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 -6 V
21 0 V
20 0 V
20 0 V
21 0 V
20 -6 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
stroke 5058 1328 M
20 0 V
21 0 V
20 0 V
20 0 V
21 -6 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 -6 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
20 0 V
21 -5 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
21 -6 V
20 -6 V
20 6 V
21 0 V
20 0 V
20 6 V
21 5 V
20 0 V
874 3697 Box
895 2952 Box
915 2632 Box
935 2393 Box
956 2265 Box
976 2160 Box
996 2096 Box
1016 2032 Box
1037 1992 Box
1057 1951 Box
1077 1910 Box
1098 1881 Box
1118 1852 Box
1138 1823 Box
1159 1805 Box
1179 1782 Box
1199 1765 Box
1220 1753 Box
1240 1735 Box
1260 1724 Box
1281 1712 Box
1301 1701 Box
1321 1689 Box
1341 1677 Box
1362 1666 Box
1382 1660 Box
1402 1654 Box
1423 1648 Box
1443 1642 Box
1463 1642 Box
1484 1637 Box
1504 1631 Box
1524 1631 Box
1545 1625 Box
1565 1619 Box
1585 1613 Box
1605 1607 Box
1626 1602 Box
1646 1596 Box
1666 1590 Box
1687 1584 Box
1707 1578 Box
1727 1572 Box
1748 1567 Box
1768 1561 Box
1788 1555 Box
1809 1549 Box
1829 1543 Box
1849 1538 Box
1870 1532 Box
1890 1526 Box
1910 1520 Box
1930 1514 Box
1951 1508 Box
1971 1503 Box
1991 1503 Box
2012 1497 Box
2032 1497 Box
2052 1491 Box
2073 1491 Box
2093 1485 Box
2113 1479 Box
2134 1479 Box
2154 1474 Box
2174 1474 Box
2194 1468 Box
2215 1468 Box
2235 1468 Box
2255 1462 Box
2276 1462 Box
2296 1456 Box
2316 1456 Box
2337 1456 Box
2357 1450 Box
2377 1450 Box
2398 1444 Box
2418 1444 Box
2438 1439 Box
2458 1439 Box
2479 1439 Box
2499 1433 Box
2519 1433 Box
2540 1433 Box
2560 1427 Box
2580 1427 Box
2601 1427 Box
2621 1421 Box
2641 1421 Box
2662 1421 Box
2682 1415 Box
2702 1415 Box
2723 1415 Box
2743 1410 Box
2763 1410 Box
2783 1410 Box
2804 1404 Box
2824 1404 Box
2844 1404 Box
2865 1398 Box
2885 1398 Box
2905 1398 Box
2926 1392 Box
2946 1392 Box
2966 1386 Box
2987 1386 Box
3007 1380 Box
3027 1380 Box
3047 1380 Box
3068 1375 Box
3088 1375 Box
3108 1369 Box
3129 1369 Box
3149 1369 Box
3169 1363 Box
3190 1363 Box
3210 1363 Box
3230 1363 Box
3251 1357 Box
3271 1357 Box
3291 1357 Box
3312 1357 Box
3332 1351 Box
3352 1351 Box
3372 1351 Box
3393 1351 Box
3413 1351 Box
3433 1351 Box
3454 1346 Box
3474 1346 Box
3494 1346 Box
3515 1346 Box
3535 1346 Box
3555 1346 Box
3576 1346 Box
3596 1346 Box
3616 1346 Box
3636 1346 Box
3657 1346 Box
3677 1346 Box
3697 1346 Box
3718 1351 Box
3738 1351 Box
3758 1351 Box
3779 1351 Box
3799 1351 Box
3819 1351 Box
3840 1351 Box
3860 1351 Box
3880 1351 Box
3901 1357 Box
3921 1357 Box
3941 1357 Box
3961 1357 Box
3982 1357 Box
4002 1357 Box
4022 1357 Box
4043 1357 Box
4063 1357 Box
4083 1363 Box
4104 1363 Box
4124 1363 Box
4144 1363 Box
4165 1363 Box
4185 1357 Box
4205 1357 Box
4225 1357 Box
4246 1357 Box
4266 1357 Box
4286 1351 Box
4307 1351 Box
4327 1351 Box
4347 1351 Box
4368 1351 Box
4388 1346 Box
4408 1346 Box
4429 1346 Box
4449 1346 Box
4469 1346 Box
4489 1346 Box
4510 1346 Box
4530 1340 Box
4550 1340 Box
4571 1340 Box
4591 1340 Box
4611 1340 Box
4632 1340 Box
4652 1340 Box
4672 1334 Box
4693 1334 Box
4713 1334 Box
4733 1334 Box
4754 1334 Box
4774 1328 Box
4794 1328 Box
4814 1328 Box
4835 1328 Box
4855 1328 Box
4875 1328 Box
4896 1328 Box
4916 1328 Box
4936 1328 Box
4957 1328 Box
4977 1328 Box
4997 1328 Box
5018 1328 Box
5038 1328 Box
5058 1328 Box
5078 1328 Box
5099 1328 Box
5119 1328 Box
5139 1328 Box
5160 1322 Box
5180 1322 Box
5200 1322 Box
5221 1322 Box
5241 1322 Box
5261 1322 Box
5282 1322 Box
5302 1322 Box
5322 1322 Box
5343 1322 Box
5363 1322 Box
5383 1322 Box
5403 1322 Box
5424 1322 Box
5444 1322 Box
5464 1316 Box
5485 1316 Box
5505 1316 Box
5525 1316 Box
5546 1316 Box
5566 1316 Box
5586 1316 Box
5607 1316 Box
5627 1316 Box
5647 1316 Box
5667 1316 Box
5688 1311 Box
5708 1311 Box
5728 1311 Box
5749 1311 Box
5769 1311 Box
5789 1311 Box
5810 1305 Box
5830 1299 Box
5850 1305 Box
5871 1305 Box
5891 1305 Box
5911 1311 Box
5932 1316 Box
5952 1316 Box
6579 4050 Box
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
854 4183 N
0 -3047 V
6093 0 V
0 3047 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
